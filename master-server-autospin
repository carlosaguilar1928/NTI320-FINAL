#!/bin/bash

gcloud init
1
intense-reason-191902

echo "#######creating firewall rules########"

gcloud compute firewall-rules create allow-http --description " allow http." \
    --allow tcp:80
gcloud compute firewall-rules create allow-https --description "Allow https." \
    --allow tcp:443
gcloud compute firewall-rules create allow-nrpe --description "Allow nrpe-server communication." \
    --allow tcp:5666
gcloud compute firewall-rules create allow-ldap --description "Allow ldap allowed." \
    --allow tcp:636
gcloud compute firewall-rules create allow-postgresql --description "Allow Postgresql." \
    --allow tcp:5432
gcloud compute firewall-rules create allow-django --description "Django test server connection allowed." \
    --allow tcp:8000


echo "#######Installing git###########"

yum install git -y    
git clone https://github.com/carlosaguilar1928/NTI320-FINAL
 
 
echo "########Deployments#############" 

gcloud compute instances create ldap-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/ldap-server-automation   
gcloud compute instances create nfs-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/nfs-server-automation
 

echo "Resolving Dependencies LDAP" 
    #ldapip=(gcloud compute instances list | grep ldapserver)
    #echo $ldapid
ldapip=$(gcloud compute instances list | grep ldap-server  | awk '{print $4}')
sed -i "s/a.b.c.d/$ldapip/g" /home/carlosaguilar1928/nfs-client-auto
nfsip=$(gcloud compute instances list | grep nfs-server  | awk '{print $4}')
sed -i "s/1.2.3.4/$nfsip/g" /home/carlosaguilar1928/nfs-client-auto
sleep 2

  
echo "launching nfs and ldap client"
gcloud compute instances create client-01 --image-family ubuntu-1604-lts --image-project ubuntu-os-cloud --machine-type f1-micro --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/nfs-client-auto 
  
echo "launching postgres" 
gcloud compute instances create postgresql-db --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/postgressql-server


echo "resolving dependencies for django"  
postgresip=$(gcloud compute instances list | grep posgressql-db  | awk '{print $4}')
sed -i "s/a.b.c.d/$postgresip/g" /home/carlosaguilar1928/NTI320-FINAL/django-for-postgress
sleep 2

echo "launching django" 
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress

echo "launching repo server"
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress


echo "launching mail server" 
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress


echo "launching nagios" 
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress


echo "launching cacti"
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress


echo "launching rsyslog"
gcloud compute instances create django-server --image-family centos-7 --image-project centos-cloud --machine-type f1-micro  --metadata-from-file startup-script=/home/carlosaguilar1928/NTI320-FINAL/django-for-postgress


echo "######### Building RPM###########"

echo "########## Transfer RPM to REPO############"

echo "##########Work with REPO Server##############" 

echo "######### Install RPM in all clients ############" 

echo "######### Point RPMs to monitoring Servers ###########" 





